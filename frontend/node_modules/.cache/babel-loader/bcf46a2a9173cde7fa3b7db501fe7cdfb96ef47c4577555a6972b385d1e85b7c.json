{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"46\",\n    y: \"38\",\n    width: \"144\",\n    height: \"180\",\n    rx: \"16\",\n    transform: \"translate(246 10) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"244\",\n    y1: \"96\",\n    x2: \"244\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"118 168 134 128 102 128 118 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"52\",\n    y: \"36\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    transform: \"translate(252 4) rotate(90)\",\n    opacity: \"0.2\"\n  }), React.createElement(\"line\", {\n    x1: \"248\",\n    y1: \"96\",\n    x2: \"248\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"52\",\n    y: \"36\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    transform: \"translate(252 4) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"124 168 140 128 108 128 124 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M248,88a8,8,0,0,0-8,8v64a8,8,0,0,0,16,0V96A8,8,0,0,0,248,88Z\"\n  }), React.createElement(\"path\", {\n    d: \"M200,48H48A24.1,24.1,0,0,0,24,72V184a24.1,24.1,0,0,0,24,24H200a24.1,24.1,0,0,0,24-24V72A24.1,24.1,0,0,0,200,48Zm-52.6,83-16,40a7.9,7.9,0,0,1-7.4,5,8,8,0,0,1-3-.6,7.9,7.9,0,0,1-4.4-10.4l11.6-29H108a7.9,7.9,0,0,1-6.6-3.5,8,8,0,0,1-.8-7.5l16-40a8,8,0,1,1,14.8,6l-11.6,29H140a7.9,7.9,0,0,1,6.6,3.5A8,8,0,0,1,147.4,131Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"248\",\n    y1: \"96\",\n    x2: \"248\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"52\",\n    y: \"36\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    transform: \"translate(252 4) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"124 168 140 128 108 128 124 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"248\",\n    y1: \"96\",\n    x2: \"248\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"52\",\n    y: \"36\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    transform: \"translate(252 4) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"124 168 140 128 108 128 124 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"248\",\n    y1: \"96\",\n    x2: \"248\",\n    y2: \"160\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"52\",\n    y: \"36\",\n    width: \"144\",\n    height: \"184\",\n    rx: \"16\",\n    transform: \"translate(252 4) rotate(90)\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"124 168 140 128 108 128 124 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar BatteryCharging = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nBatteryCharging.displayName = \"BatteryCharging\";\nexport default BatteryCharging;","map":{"version":3,"names":["pathsByWeight","Map","set","color","React","createElement","Fragment","x","y","width","height","rx","transform","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","points","opacity","d","renderPath","weight","renderPathForWeight","BatteryCharging","forwardRef","props","ref","IconBase","Object","assign","displayName"],"sources":["C:\\Users\\lucas\\OneDrive\\√Årea de Trabalho\\Testes js\\Web-minicase_Wise_Finance\\frontend\\node_modules\\phosphor-react\\src\\icons\\BatteryCharging.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"46\"\n      y=\"38\"\n      width=\"144\"\n      height=\"180\"\n      rx=\"16\"\n      transform=\"translate(246 10) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"244\"\n      y1=\"96\"\n      x2=\"244\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"118 168 134 128 102 128 118 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect\n      x=\"52\"\n      y=\"36\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      transform=\"translate(252 4) rotate(90)\"\n      opacity=\"0.2\"\n    />\n    <line\n      x1=\"248\"\n      y1=\"96\"\n      x2=\"248\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"52\"\n      y=\"36\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      transform=\"translate(252 4) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"124 168 140 128 108 128 124 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M248,88a8,8,0,0,0-8,8v64a8,8,0,0,0,16,0V96A8,8,0,0,0,248,88Z\" />\n    <path d=\"M200,48H48A24.1,24.1,0,0,0,24,72V184a24.1,24.1,0,0,0,24,24H200a24.1,24.1,0,0,0,24-24V72A24.1,24.1,0,0,0,200,48Zm-52.6,83-16,40a7.9,7.9,0,0,1-7.4,5,8,8,0,0,1-3-.6,7.9,7.9,0,0,1-4.4-10.4l11.6-29H108a7.9,7.9,0,0,1-6.6-3.5,8,8,0,0,1-.8-7.5l16-40a8,8,0,1,1,14.8,6l-11.6,29H140a7.9,7.9,0,0,1,6.6,3.5A8,8,0,0,1,147.4,131Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"248\"\n      y1=\"96\"\n      x2=\"248\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <rect\n      x=\"52\"\n      y=\"36\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      transform=\"translate(252 4) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"124 168 140 128 108 128 124 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"248\"\n      y1=\"96\"\n      x2=\"248\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <rect\n      x=\"52\"\n      y=\"36\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      transform=\"translate(252 4) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"124 168 140 128 108 128 124 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"248\"\n      y1=\"96\"\n      x2=\"248\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <rect\n      x=\"52\"\n      y=\"36\"\n      width=\"144\"\n      height=\"184\"\n      rx=\"16\"\n      transform=\"translate(252 4) rotate(90)\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"124 168 140 128 108 128 124 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst BatteryCharging = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nBatteryCharging.displayName = \"BatteryCharging\";\n\nexport default BatteryCharging;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}