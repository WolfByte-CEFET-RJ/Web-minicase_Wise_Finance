{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n    x1: \"44\",\n    y1: \"164\",\n    x2: \"84\",\n    y2: \"220\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"84\",\n    y1: \"164\",\n    x2: \"44\",\n    y2: \"220\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"120 164 120 220 148 220\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"polyline\", {\n    points: \"148 36 148 100 212 100\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M44,124V44a8,8,0,0,1,8-8H156l56,56v32\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M180,214.4a23.7,23.7,0,0,0,15,5.6c9,0,17-3.4,17-14.6,0-17.9-32-10-32-26.8,0-9,6-14.6,15-14.6a23.7,23.7,0,0,1,15,5.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"120 168 120 216 148 216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"52\",\n    y1: \"168\",\n    x2: \"88\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"168\",\n    x2: \"52\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M176,212a25.2,25.2,0,0,0,15,5c9,0,17-3,17-13,0-16-32-9-32-24,0-8,6-13,15-13a25.2,25.2,0,0,1,15,5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polygon\", {\n    points: \"152 32 152 88 208 88 152 32\",\n    opacity: \"0.2\"\n  }), React.createElement(\"path\", {\n    d: \"M48,128V40a8,8,0,0,1,8-8h96l56,56v40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"152 32 152 88 208 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M94.4,172.8,80,192l14.4,19.2a8,8,0,0,1-1.6,11.2A7.7,7.7,0,0,1,88,224a8,8,0,0,1-6.4-3.2L70,205.3,58.4,220.8A8,8,0,0,1,52,224a7.7,7.7,0,0,1-4.8-1.6,8,8,0,0,1-1.6-11.2L60,192,45.6,172.8a8,8,0,1,1,12.8-9.6L70,178.7l11.6-15.5a8,8,0,0,1,12.8,9.6ZM148,208H128V168a8,8,0,0,0-16,0v48a8,8,0,0,0,8,8h28a8,8,0,0,0,0-16Zm45.7-24.2c-3.1-.8-8.6-2.3-9.7-3.6V180c0-3.3,2.4-5,7-5a18.4,18.4,0,0,1,10,3.2h-.1A8.3,8.3,0,0,0,206,180a8,8,0,0,0,8-8,7.6,7.6,0,0,0-2.9-6.1h0A33.4,33.4,0,0,0,191,159c-13.5,0-23,8.6-23,21s13,17,21.6,19.3c3.4.9,7,1.8,9.2,3.1s1.2,1,1.2,1.6,0,5-9,5a18.4,18.4,0,0,1-10-3.2h.1A8.3,8.3,0,0,0,176,204a8,8,0,0,0-8,8,7.6,7.6,0,0,0,2.9,6.1h0A33.4,33.4,0,0,0,191,225c15.7,0,25-7.9,25-21S202,186,193.7,183.8ZM216,88v40a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V40A16,16,0,0,1,56,24h96a8.1,8.1,0,0,1,5.7,2.3l56,56A8.1,8.1,0,0,1,216,88Zm-20,0L152,44V88Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"120 168 120 216 148 216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"52\",\n    y1: \"168\",\n    x2: \"88\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"168\",\n    x2: \"52\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M176,212a25.2,25.2,0,0,0,15,5c9,0,17-3,17-13,0-16-32-9-32-24,0-8,6-13,15-13a25.2,25.2,0,0,1,15,5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M48,128V40a8,8,0,0,1,8-8h96l56,56v40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"polyline\", {\n    points: \"152 32 152 88 208 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"120 168 120 216 148 216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"52\",\n    y1: \"168\",\n    x2: \"88\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"168\",\n    x2: \"52\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M176,212a25.2,25.2,0,0,0,15,5c9,0,17-3,17-13,0-16-32-9-32-24,0-8,6-13,15-13a25.2,25.2,0,0,1,15,5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M48,128V40a8,8,0,0,1,8-8h96l56,56v40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"polyline\", {\n    points: \"152 32 152 88 208 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"120 168 120 216 148 216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"52\",\n    y1: \"168\",\n    x2: \"88\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"88\",\n    y1: \"168\",\n    x2: \"52\",\n    y2: \"216\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M176,212a25.2,25.2,0,0,0,15,5c9,0,17-3,17-13,0-16-32-9-32-24,0-8,6-13,15-13a25.2,25.2,0,0,1,15,5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M48,128V40a8,8,0,0,1,8-8h96l56,56v40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"polyline\", {\n    points: \"152 32 152 88 208 88\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar FileXls = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nFileXls.displayName = \"FileXls\";\nexport default FileXls;","map":{"version":3,"names":["pathsByWeight","Map","set","color","React","createElement","Fragment","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","points","d","opacity","renderPath","weight","renderPathForWeight","FileXls","forwardRef","props","ref","IconBase","Object","assign","displayName"],"sources":["C:\\Users\\lucas\\OneDrive\\√Årea de Trabalho\\Testes js\\Web-minicase_Wise_Finance\\frontend\\node_modules\\phosphor-react\\src\\icons\\FileXls.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"44\"\n      y1=\"164\"\n      x2=\"84\"\n      y2=\"220\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"84\"\n      y1=\"164\"\n      x2=\"44\"\n      y2=\"220\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"120 164 120 220 148 220\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"148 36 148 100 212 100\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M44,124V44a8,8,0,0,1,8-8H156l56,56v32\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M180,214.4a23.7,23.7,0,0,0,15,5.6c9,0,17-3.4,17-14.6,0-17.9-32-10-32-26.8,0-9,6-14.6,15-14.6a23.7,23.7,0,0,1,15,5.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polyline\n      points=\"120 168 120 216 148 216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"52\"\n      y1=\"168\"\n      x2=\"88\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"168\"\n      x2=\"52\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M176,212a25.2,25.2,0,0,0,15,5c9,0,17-3,17-13,0-16-32-9-32-24,0-8,6-13,15-13a25.2,25.2,0,0,1,15,5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polygon points=\"152 32 152 88 208 88 152 32\" opacity=\"0.2\" />\n    <path\n      d=\"M48,128V40a8,8,0,0,1,8-8h96l56,56v40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"152 32 152 88 208 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M94.4,172.8,80,192l14.4,19.2a8,8,0,0,1-1.6,11.2A7.7,7.7,0,0,1,88,224a8,8,0,0,1-6.4-3.2L70,205.3,58.4,220.8A8,8,0,0,1,52,224a7.7,7.7,0,0,1-4.8-1.6,8,8,0,0,1-1.6-11.2L60,192,45.6,172.8a8,8,0,1,1,12.8-9.6L70,178.7l11.6-15.5a8,8,0,0,1,12.8,9.6ZM148,208H128V168a8,8,0,0,0-16,0v48a8,8,0,0,0,8,8h28a8,8,0,0,0,0-16Zm45.7-24.2c-3.1-.8-8.6-2.3-9.7-3.6V180c0-3.3,2.4-5,7-5a18.4,18.4,0,0,1,10,3.2h-.1A8.3,8.3,0,0,0,206,180a8,8,0,0,0,8-8,7.6,7.6,0,0,0-2.9-6.1h0A33.4,33.4,0,0,0,191,159c-13.5,0-23,8.6-23,21s13,17,21.6,19.3c3.4.9,7,1.8,9.2,3.1s1.2,1,1.2,1.6,0,5-9,5a18.4,18.4,0,0,1-10-3.2h.1A8.3,8.3,0,0,0,176,204a8,8,0,0,0-8,8,7.6,7.6,0,0,0,2.9,6.1h0A33.4,33.4,0,0,0,191,225c15.7,0,25-7.9,25-21S202,186,193.7,183.8ZM216,88v40a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V40A16,16,0,0,1,56,24h96a8.1,8.1,0,0,1,5.7,2.3l56,56A8.1,8.1,0,0,1,216,88Zm-20,0L152,44V88Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"120 168 120 216 148 216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"52\"\n      y1=\"168\"\n      x2=\"88\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"168\"\n      x2=\"52\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M176,212a25.2,25.2,0,0,0,15,5c9,0,17-3,17-13,0-16-32-9-32-24,0-8,6-13,15-13a25.2,25.2,0,0,1,15,5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M48,128V40a8,8,0,0,1,8-8h96l56,56v40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"152 32 152 88 208 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"120 168 120 216 148 216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"52\"\n      y1=\"168\"\n      x2=\"88\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"168\"\n      x2=\"52\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M176,212a25.2,25.2,0,0,0,15,5c9,0,17-3,17-13,0-16-32-9-32-24,0-8,6-13,15-13a25.2,25.2,0,0,1,15,5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M48,128V40a8,8,0,0,1,8-8h96l56,56v40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"152 32 152 88 208 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"120 168 120 216 148 216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"52\"\n      y1=\"168\"\n      x2=\"88\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"168\"\n      x2=\"52\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M176,212a25.2,25.2,0,0,0,15,5c9,0,17-3,17-13,0-16-32-9-32-24,0-8,6-13,15-13a25.2,25.2,0,0,1,15,5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M48,128V40a8,8,0,0,1,8-8h96l56,56v40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"152 32 152 88 208 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst FileXls = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nFileXls.displayName = \"FileXls\";\n\nexport default FileXls;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}