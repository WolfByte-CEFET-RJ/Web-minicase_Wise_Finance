{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"32\",\n    width: \"144\",\n    height: \"192\",\n    rx: \"72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"200\",\n    y1: \"144\",\n    x2: \"224\",\n    y2: \"144\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"144\",\n    x2: \"56\",\n    y2: \"144\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"104\",\n    x2: \"224\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"144\",\n    x2: \"128\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"55.9\",\n    y1: \"28\",\n    x2: \"79.7\",\n    y2: \"50.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"199.9\",\n    y1: \"28\",\n    x2: \"176.2\",\n    y2: \"50.5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"184\",\n    x2: \"63.5\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"192.5\",\n    y1: \"184\",\n    x2: \"224\",\n    y2: \"184\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M200,104v48a72,72,0,0,1-72,72h0a72,72,0,0,1-72-72V104Z\",\n    opacity: \"0.2\"\n  }), React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"32\",\n    width: \"144\",\n    height: \"192\",\n    rx: \"72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"200\",\n    y1: \"136\",\n    x2: \"224\",\n    y2: \"136\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"136\",\n    x2: \"56\",\n    y2: \"136\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"168\",\n    x2: \"57.8\",\n    y2: \"168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"104\",\n    x2: \"224\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"136\",\n    x2: \"128\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"198.2\",\n    y1: \"168\",\n    x2: \"224\",\n    y2: \"168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"55.9\",\n    y1: \"28\",\n    x2: \"79.7\",\n    y2: \"50.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"199.9\",\n    y1: \"28\",\n    x2: \"176.2\",\n    y2: \"50.5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M50.4,33.8a8,8,0,0,1,11-11.6L80.1,40a79.8,79.8,0,0,1,95.7-.1l18.6-17.7a8,8,0,0,1,11.3.3,7.9,7.9,0,0,1-.3,11.3L187.6,50.7a79.6,79.6,0,0,1,20,45.3H48.4A79.9,79.9,0,0,1,68.3,50.8ZM32,96a8,8,0,0,0,0,16H48V96Zm176,56a70.3,70.3,0,0,1-.4,8H224a8,8,0,0,1,0,16H204.3a80,80,0,0,1-152.6,0H32a8,8,0,0,1,0-16H48.4a70.3,70.3,0,0,1-.4-8v-8H32a8,8,0,0,1,0-16H48V112H208v16h16a8,8,0,0,1,0,16H208Zm-72-16a8,8,0,0,0-16,0v64a8,8,0,0,0,16,0Zm96-32a8,8,0,0,0-8-8H208v16h16A8,8,0,0,0,232,104Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"32\",\n    width: \"144\",\n    height: \"192\",\n    rx: \"72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"200\",\n    y1: \"136\",\n    x2: \"224\",\n    y2: \"136\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"136\",\n    x2: \"56\",\n    y2: \"136\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"168\",\n    x2: \"57.8\",\n    y2: \"168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"104\",\n    x2: \"224\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"136\",\n    x2: \"128\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"198.2\",\n    y1: \"168\",\n    x2: \"224\",\n    y2: \"168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"55.9\",\n    y1: \"28\",\n    x2: \"79.7\",\n    y2: \"50.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"199.9\",\n    y1: \"28\",\n    x2: \"176.2\",\n    y2: \"50.5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"32\",\n    width: \"144\",\n    height: \"192\",\n    rx: \"72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"200\",\n    y1: \"136\",\n    x2: \"224\",\n    y2: \"136\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"136\",\n    x2: \"56\",\n    y2: \"136\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"168\",\n    x2: \"57.8\",\n    y2: \"168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"104\",\n    x2: \"224\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"136\",\n    x2: \"128\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"198.2\",\n    y1: \"168\",\n    x2: \"224\",\n    y2: \"168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"55.9\",\n    y1: \"28\",\n    x2: \"79.7\",\n    y2: \"50.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"199.9\",\n    y1: \"28\",\n    x2: \"176.2\",\n    y2: \"50.5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"56\",\n    y: \"32\",\n    width: \"144\",\n    height: \"192\",\n    rx: \"72\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"200\",\n    y1: \"136\",\n    x2: \"224\",\n    y2: \"136\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"136\",\n    x2: \"56\",\n    y2: \"136\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"168\",\n    x2: \"57.8\",\n    y2: \"168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"104\",\n    x2: \"224\",\n    y2: \"104\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"128\",\n    y1: \"136\",\n    x2: \"128\",\n    y2: \"224\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"198.2\",\n    y1: \"168\",\n    x2: \"224\",\n    y2: \"168\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"55.9\",\n    y1: \"28\",\n    x2: \"79.7\",\n    y2: \"50.6\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"199.9\",\n    y1: \"28\",\n    x2: \"176.2\",\n    y2: \"50.5\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar BugBeetle = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nBugBeetle.displayName = \"BugBeetle\";\nexport default BugBeetle;","map":{"version":3,"names":["pathsByWeight","Map","set","color","React","createElement","Fragment","x","y","width","height","rx","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","d","opacity","renderPath","weight","renderPathForWeight","BugBeetle","forwardRef","props","ref","IconBase","Object","assign","displayName"],"sources":["C:\\Users\\lucas\\OneDrive\\Área de Trabalho\\Testes js\\Web-minicase_Wise_Finance\\frontend\\node_modules\\phosphor-react\\src\\icons\\BugBeetle.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"56\"\n      y=\"32\"\n      width=\"144\"\n      height=\"192\"\n      rx=\"72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"200\"\n      y1=\"144\"\n      x2=\"224\"\n      y2=\"144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"144\"\n      x2=\"56\"\n      y2=\"144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"104\"\n      x2=\"224\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"144\"\n      x2=\"128\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"55.9\"\n      y1=\"28\"\n      x2=\"79.7\"\n      y2=\"50.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"199.9\"\n      y1=\"28\"\n      x2=\"176.2\"\n      y2=\"50.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"184\"\n      x2=\"63.5\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"192.5\"\n      y1=\"184\"\n      x2=\"224\"\n      y2=\"184\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M200,104v48a72,72,0,0,1-72,72h0a72,72,0,0,1-72-72V104Z\"\n      opacity=\"0.2\"\n    />\n    <rect\n      x=\"56\"\n      y=\"32\"\n      width=\"144\"\n      height=\"192\"\n      rx=\"72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"200\"\n      y1=\"136\"\n      x2=\"224\"\n      y2=\"136\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"136\"\n      x2=\"56\"\n      y2=\"136\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"168\"\n      x2=\"57.8\"\n      y2=\"168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"104\"\n      x2=\"224\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"136\"\n      x2=\"128\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"198.2\"\n      y1=\"168\"\n      x2=\"224\"\n      y2=\"168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"55.9\"\n      y1=\"28\"\n      x2=\"79.7\"\n      y2=\"50.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"199.9\"\n      y1=\"28\"\n      x2=\"176.2\"\n      y2=\"50.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M50.4,33.8a8,8,0,0,1,11-11.6L80.1,40a79.8,79.8,0,0,1,95.7-.1l18.6-17.7a8,8,0,0,1,11.3.3,7.9,7.9,0,0,1-.3,11.3L187.6,50.7a79.6,79.6,0,0,1,20,45.3H48.4A79.9,79.9,0,0,1,68.3,50.8ZM32,96a8,8,0,0,0,0,16H48V96Zm176,56a70.3,70.3,0,0,1-.4,8H224a8,8,0,0,1,0,16H204.3a80,80,0,0,1-152.6,0H32a8,8,0,0,1,0-16H48.4a70.3,70.3,0,0,1-.4-8v-8H32a8,8,0,0,1,0-16H48V112H208v16h16a8,8,0,0,1,0,16H208Zm-72-16a8,8,0,0,0-16,0v64a8,8,0,0,0,16,0Zm96-32a8,8,0,0,0-8-8H208v16h16A8,8,0,0,0,232,104Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"56\"\n      y=\"32\"\n      width=\"144\"\n      height=\"192\"\n      rx=\"72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"200\"\n      y1=\"136\"\n      x2=\"224\"\n      y2=\"136\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"136\"\n      x2=\"56\"\n      y2=\"136\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"168\"\n      x2=\"57.8\"\n      y2=\"168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"104\"\n      x2=\"224\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"136\"\n      x2=\"128\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"198.2\"\n      y1=\"168\"\n      x2=\"224\"\n      y2=\"168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"55.9\"\n      y1=\"28\"\n      x2=\"79.7\"\n      y2=\"50.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"199.9\"\n      y1=\"28\"\n      x2=\"176.2\"\n      y2=\"50.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"56\"\n      y=\"32\"\n      width=\"144\"\n      height=\"192\"\n      rx=\"72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"200\"\n      y1=\"136\"\n      x2=\"224\"\n      y2=\"136\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"136\"\n      x2=\"56\"\n      y2=\"136\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"168\"\n      x2=\"57.8\"\n      y2=\"168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"104\"\n      x2=\"224\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"136\"\n      x2=\"128\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"198.2\"\n      y1=\"168\"\n      x2=\"224\"\n      y2=\"168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"55.9\"\n      y1=\"28\"\n      x2=\"79.7\"\n      y2=\"50.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"199.9\"\n      y1=\"28\"\n      x2=\"176.2\"\n      y2=\"50.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"56\"\n      y=\"32\"\n      width=\"144\"\n      height=\"192\"\n      rx=\"72\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"200\"\n      y1=\"136\"\n      x2=\"224\"\n      y2=\"136\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"136\"\n      x2=\"56\"\n      y2=\"136\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"168\"\n      x2=\"57.8\"\n      y2=\"168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"104\"\n      x2=\"224\"\n      y2=\"104\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"136\"\n      x2=\"128\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"198.2\"\n      y1=\"168\"\n      x2=\"224\"\n      y2=\"168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"55.9\"\n      y1=\"28\"\n      x2=\"79.7\"\n      y2=\"50.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"199.9\"\n      y1=\"28\"\n      x2=\"176.2\"\n      y2=\"50.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst BugBeetle = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nBugBeetle.displayName = \"BugBeetle\";\n\nexport default BugBeetle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}