{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"128\",\n    x2: \"224\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"ellipse\", {\n    cx: \"128\",\n    cy: \"128\",\n    rx: \"40\",\n    ry: \"93.4\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    opacity: \"0.2\"\n  }), React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeMiterlimit: \"10\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"128\",\n    x2: \"224\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"ellipse\", {\n    cx: \"128\",\n    cy: \"128\",\n    rx: \"40\",\n    ry: \"93.4\",\n    fill: \"none\",\n    stroke: color,\n    strokeMiterlimit: \"10\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M232,128A104.1,104.1,0,0,0,128,24h0a104,104,0,0,0,0,208h0A104.1,104.1,0,0,0,232,128Zm-16.4-8H175.8c-1.6-29.6-12-57-29.5-78.1A88.2,88.2,0,0,1,215.6,120ZM96.3,136h63.4c-1.8,28.8-13.3,55.7-31.7,74.4C109.6,191.7,98.1,164.8,96.3,136Zm0-16c1.8-28.8,13.3-55.7,31.7-74.4,18.4,18.7,29.9,45.6,31.7,74.4Zm50,94.1c17.5-21.1,27.9-48.5,29.5-78.1h39.8A88.2,88.2,0,0,1,146.3,214.1Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"128\",\n    x2: \"224\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"ellipse\", {\n    cx: \"128\",\n    cy: \"128\",\n    rx: \"40\",\n    ry: \"93.4\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"128\",\n    x2: \"224\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"ellipse\", {\n    cx: \"128\",\n    cy: \"128\",\n    rx: \"40\",\n    ry: \"93.4\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"circle\", {\n    cx: \"128\",\n    cy: \"128\",\n    r: \"96\",\n    fill: \"none\",\n    stroke: color,\n    strokeMiterlimit: \"10\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"32\",\n    y1: \"128\",\n    x2: \"224\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"ellipse\", {\n    cx: \"128\",\n    cy: \"128\",\n    rx: \"40\",\n    ry: \"93.4\",\n    fill: \"none\",\n    stroke: color,\n    strokeMiterlimit: \"10\",\n    strokeWidth: \"16\"\n  }));\n});\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\nvar GlobeSimple = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nGlobeSimple.displayName = \"GlobeSimple\";\nexport default GlobeSimple;","map":{"version":3,"names":["pathsByWeight","Map","set","color","React","createElement","Fragment","cx","cy","r","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","rx","ry","opacity","strokeMiterlimit","d","renderPath","weight","renderPathForWeight","GlobeSimple","forwardRef","props","ref","IconBase","Object","assign","displayName"],"sources":["C:\\Users\\lucas\\OneDrive\\√Årea de Trabalho\\Testes js\\Web-minicase_Wise_Finance\\frontend\\node_modules\\phosphor-react\\src\\icons\\GlobeSimple.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"128\"\n      x2=\"224\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <ellipse\n      cx=\"128\"\n      cy=\"128\"\n      rx=\"40\"\n      ry=\"93.4\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"128\" cy=\"128\" r=\"96\" opacity=\"0.2\" />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"128\"\n      x2=\"224\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <ellipse\n      cx=\"128\"\n      cy=\"128\"\n      rx=\"40\"\n      ry=\"93.4\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M232,128A104.1,104.1,0,0,0,128,24h0a104,104,0,0,0,0,208h0A104.1,104.1,0,0,0,232,128Zm-16.4-8H175.8c-1.6-29.6-12-57-29.5-78.1A88.2,88.2,0,0,1,215.6,120ZM96.3,136h63.4c-1.8,28.8-13.3,55.7-31.7,74.4C109.6,191.7,98.1,164.8,96.3,136Zm0-16c1.8-28.8,13.3-55.7,31.7-74.4,18.4,18.7,29.9,45.6,31.7,74.4Zm50,94.1c17.5-21.1,27.9-48.5,29.5-78.1h39.8A88.2,88.2,0,0,1,146.3,214.1Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"128\"\n      x2=\"224\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <ellipse\n      cx=\"128\"\n      cy=\"128\"\n      rx=\"40\"\n      ry=\"93.4\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"128\"\n      x2=\"224\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <ellipse\n      cx=\"128\"\n      cy=\"128\"\n      rx=\"40\"\n      ry=\"93.4\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"32\"\n      y1=\"128\"\n      x2=\"224\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <ellipse\n      cx=\"128\"\n      cy=\"128\"\n      rx=\"40\"\n      ry=\"93.4\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GlobeSimple = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGlobeSimple.displayName = \"GlobeSimple\";\n\nexport default GlobeSimple;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}